name: Deploy
on:
  push:
    branches: [master]
  workflow_dispatch:
concurrency:
  group: ci-deploy-${{ github.ref }}
  cancel-in-progress: true
jobs:
  deploy:
    runs-on: ubuntu-20.04
    steps:
      - name: Clone repositories
        uses: actions/checkout@v4
        with:
          submodules: recursive

      - name: Setup Node.js environment
        uses: actions/setup-node@v4
        with:
          node-version: 22.6
          cache: "npm"

      - name: Get installed Playwright version
        shell: bash
        working-directory: ${{ inputs.WORKSPACE_ROOT }}
        id: playwright-version
        run: echo "PLAYWRIGHT_VERSION=$(jq '.devDependencies."@playwright/test"' package.json)" >> $GITHUB_ENV

      - name: Cache playwright binaries
        uses: actions/cache@v4
        id: playwright-cache
        with:
          path: |
            ~/.cache/ms-playwright
          key: ${{ runner.os }}-playwright-${{ env.PLAYWRIGHT_VERSION }}

      - name: Install packages
        run: npm install

      - name: Run build prechecks
        run: ./bgord-scripts/build-prechecks.sh

      - name: Build the app
        run: ./scripts/production-project-build.sh

      - name: Configure SSH
        run: |
          mkdir -p ~/.ssh/
          echo "$SSH_KEY" > ~/.ssh/production.key
          chmod 600 ~/.ssh/production.key
          cat >>~/.ssh/config <<END
          Host production
            HostName $SSH_HOST
            User $SSH_USER
            IdentityFile ~/.ssh/production.key
            StrictHostKeyChecking no
          END
        env:
          SSH_USER: ${{ secrets.USER }}
          SSH_KEY: ${{ secrets.PRIVATE_KEY }}
          SSH_HOST: ${{ secrets.HOSTNAME }}

      - name: Sync source code
        run: rsync -azP build/ production:/var/www/${{ secrets.PROJECT_NAME }}
